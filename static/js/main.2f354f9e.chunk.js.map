{"version":3,"sources":["Utils/useForm.js","Utils/Controls/index.js","Utils/Controls/Input.js","Components/auth/Signin.js","Redux/actions/authActions.js","Components/auth/Signup.js","Components/task/AddTask.js","Redux/actions/taskActions.js","Components/task/Check.js","Components/task/Task.js","Components/task/Tasks.js","Components/dashboard/Dashboard.js","Components/layout/NavItems.js","Components/layout/Navbar.js","App.js","Redux/reducers/taskReducer.js","Redux/reducers/authReducer.js","Redux/reducers/rootReducer.js","Redux/store/index.js","Config/firebaseConfig.js","index.js"],"names":["useForm","initialValue","useState","values","setValues","resetFields","handleInputChange","target","name","value","Form","children","rest","className","autoComplete","Controls","Input","label","type","placeholder","onChange","Group","Label","Control","email","password","Signin","dispatch","useDispatch","uid","useSelector","state","firebase","auth","to","onSubmit","e","credentials","preventDefault","getState","getFirebase","signInWithEmailAndPassword","then","catch","err","Button","variant","Signup","createUserWithEmailAndPassword","task","AddTask","firestore","collection","add","date","Date","isDone","addTask","Check","onClick","style","cursor","Task","title","onToggle","moment","toDate","calendar","Tasks","useFirestoreConnect","orderBy","tasks","ordered","Table","striped","bordered","hover","length","map","id","doc","delete","set","merge","toggleCheck","key","Dashboard","NavItems","signOut","Navbar","bg","App","exact","path","component","initialState","taskReducer","action","toast","success","error","warn","info","authReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","isLoaded","loading","color","width","height","ReactDOM","render","StrictMode","hideProgressBar","autoClose","newestOnTop","limit","document","getElementById"],"mappings":"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","file":"static/js/main.2f354f9e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Form as ReactForm } from \"react-bootstrap\";\n\nexport const useForm = (initialValue) => {\n  const [values, setValues] = useState(initialValue);\n  const handleInputChange = ({ target: { name, value } }) => {\n    setValues({ ...values, [name]: value });\n  };\n  const resetFields = () => {\n    setValues(initialValue);\n  };\n  return {\n    resetFields,\n    values,\n    setValues,\n    handleInputChange,\n  };\n};\n\nexport const Form = ({ children, ...rest }) => {\n  return (\n    <ReactForm className=\"container mt-4\" autoComplete=\"off\" {...rest}>\n      {children}\n    </ReactForm>\n  );\n};\n","import Input from \"./Input\";\nconst Controls = {\n  Input,\n};\nexport default Controls;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst Input = ({ label, name, value, type, placeholder, onChange }) => {\n  return (\n    <Form.Group className=\"mt-4\">\n      <Form.Label>{label}</Form.Label>\n      <Form.Control\n        name={name}\n        value={value}\n        type={type || \"email\"}\n        placeholder={placeholder}\n        onChange={onChange}\n      />\n    </Form.Group>\n  );\n};\nexport default Input;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useForm, Form as MyForm } from \"../../Utils/useForm\";\nimport Controls from \"../../Utils/Controls\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signIn } from \"../../Redux/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nconst initialValue = {\n  email: \"\",\n  password: \"\",\n};\n\nfunction Signin() {\n  const { values, handleInputChange } = useForm(initialValue);\n  const dispatch = useDispatch();\n  const { uid } = useSelector((state) => state.firebase.auth);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(signIn(values));\n  };\n\n  const { email, password } = values;\n  if (uid) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <MyForm onSubmit={handleSubmit}>\n      <h1>Signin</h1>\n      <Controls.Input\n        label=\"Email Address\"\n        name=\"email\"\n        value={email}\n        placeholder=\"Enter Email Address\"\n        onChange={handleInputChange}\n      />\n      <Controls.Input\n        label=\"Password\"\n        name=\"password\"\n        type=\"password\"\n        value={password}\n        placeholder=\"Enter Password\"\n        onChange={handleInputChange}\n      />\n      <Button variant=\"primary\" type=\"submit\">\n        Signin\n      </Button>\n    </MyForm>\n  );\n}\n\nexport default Signin;\n","export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({\n          type: \"SIGN_IN\",\n        });\n      })\n      .catch((err) => {\n        dispatch({\n          type: \"SIGN_IN_ERROR\",\n          err,\n        });\n      });\n  };\n};\nexport const signUp = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({\n          type: \"SIGN_UP\",\n        });\n      })\n      .catch((err) => {\n        dispatch({\n          type: \"SIGN_UP_ERROR\",\n          err,\n        });\n      });\n  };\n};\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({\n          type: \"SIGN_OUT\",\n        });\n      });\n  };\n};\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useForm, Form as MyForm } from \"../../Utils/useForm\";\nimport Controls from \"../../Utils/Controls\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signUp } from \"../../Redux/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nconst initialValue = {\n  email: \"\",\n  password: \"\",\n};\n\nfunction Signup() {\n  const { values, handleInputChange } = useForm(initialValue);\n  const dispatch = useDispatch();\n  const { uid } = useSelector((state) => state.firebase.auth);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(signUp(values));\n  };\n\n  const { email, password } = values;\n\n  if (uid) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <MyForm onSubmit={handleSubmit}>\n      <h1>Signup</h1>\n      <Controls.Input\n        label=\"Email Address\"\n        name=\"email\"\n        value={email}\n        placeholder=\"Enter Email Address\"\n        onChange={handleInputChange}\n      />\n      <Controls.Input\n        label=\"Password\"\n        name=\"password\"\n        type=\"password\"\n        value={password}\n        placeholder=\"Enter Password\"\n        onChange={handleInputChange}\n      />\n      <div className=\"d-flex\">\n        <Button variant=\"primary\" type=\"submit\" className=\"mr-2\">\n          Signup\n        </Button>\n\n        <Button variant=\"primary\" type=\"submit\" className=\"ml-2\">\n          Sign-up with Google\n        </Button>\n      </div>\n    </MyForm>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useForm, Form as MyForm } from \"../../Utils/useForm\";\nimport Controls from \"../../Utils/Controls\";\nimport { addTask } from \"../../Redux/actions/taskActions\";\nimport { useDispatch } from \"react-redux\";\nconst initialValue = {\n  task: \"\",\n};\n\nconst AddTask = () => {\n  const dispatch = useDispatch();\n  const { values, handleInputChange, resetFields } = useForm(initialValue);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTask(values));\n    resetFields();\n  };\n\n  const { task } = values;\n\n  return (\n    <MyForm onSubmit={handleSubmit}>\n      <h1>Add Task</h1>\n      <Controls.Input\n        label=\"Add Task\"\n        name=\"task\"\n        value={task}\n        placeholder=\"Enter Some Task\"\n        onChange={handleInputChange}\n        type=\"text\"\n      />\n\n      <Button variant=\"primary\" type=\"submit\">\n        Add Task\n      </Button>\n    </MyForm>\n  );\n};\n\nexport default AddTask;\n","export const addTask = (task) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firestore = getFirebase().firestore();\n    firestore\n      .collection(\"tasks\")\n      .add({\n        ...task,\n        date: new Date(),\n        isDone: false,\n      })\n      .then(() => {\n        dispatch({\n          type: \"ADD_TASK\",\n          task,\n        });\n      })\n      .catch((err) => {\n        dispatch({\n          type: \"ADD_TASK_ERROR\",\n          err,\n        });\n      });\n  };\n};\nexport const removeTask = (id) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firestore = getFirebase().firestore();\n    firestore\n      .collection(\"tasks\")\n      .doc(id)\n      .delete()\n      .then(() => {\n        dispatch({\n          type: \"REMOVE_TASK\",\n        });\n      })\n      .catch((err) => {\n        dispatch({\n          type: \"REMOVE_TASK_ERROR\",\n          err,\n        });\n      });\n  };\n};\nexport const toggleCheck = (task) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firestore = getFirebase().firestore();\n    firestore\n      .collection(\"tasks\")\n      .doc(task.id)\n      .set(\n        {\n          ...task,\n          isDone: !task.isDone,\n        },\n        { merge: true }\n      )\n      .then(() => {\n        dispatch({\n          type: \"TOGGLE_CHECKED\",\n        });\n      })\n      .catch((err) => {\n        dispatch({\n          type: \"TOGGLE_CHECKED_ERROR\",\n          err,\n        });\n      });\n  };\n};\n","import React from \"react\";\n\nconst Check = ({ isDone, onClick }) => {\n  if (isDone) {\n    return (\n      <span\n        className=\"material-icons text-success\"\n        style={{ cursor: \"pointer\" }}\n        onClick={onClick}\n      >\n        check_circle_outline\n      </span>\n    );\n  } else {\n    return (\n      <span\n        className=\"material-icons text-muted\"\n        style={{ cursor: \"pointer\" }}\n        onClick={onClick}\n      >\n        check_circle_outline\n      </span>\n    );\n  }\n};\n\nexport default Check;\n","import React from \"react\";\nimport moment from \"moment\";\nimport Check from \"./Check\";\nconst Task = ({ title, date, onClick, onToggle, isDone, ...rest }) => {\n  return (\n    <tr {...rest}>\n      <th>{title}</th>\n      <td>{moment(date.toDate()).calendar()}</td>\n      <td>\n        <Check onClick={onToggle} isDone={isDone} />\n      </td>\n      <td>\n        <span\n          className=\"material-icons text-danger\"\n          style={{ cursor: \"pointer\" }}\n          onClick={onClick}\n        >\n          delete\n        </span>\n      </td>\n    </tr>\n  );\n};\n\nexport default Task;\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { removeTask, toggleCheck } from \"../../Redux/actions/taskActions\";\nimport Task from \"./Task\";\n\nconst Tasks = () => {\n  useFirestoreConnect({\n    collection: \"tasks\",\n    orderBy: [\"date\", \"desc\"],\n  });\n\n  const tasks = useSelector((state) => state.firestore.ordered.tasks);\n  const dispatch = useDispatch();\n\n  return (\n    <Table striped bordered hover variant=\"dark\" className=\"container mt-4\">\n      <thead>\n        <tr className=\"text-info\">\n          <th>Tasks</th>\n          <th>Added On</th>\n          <th>Status</th>\n          <th>Delete</th>\n        </tr>\n      </thead>\n      <tbody>\n        {tasks && tasks.length > 0 ? (\n          tasks.map((task) => (\n            <Task\n              title={task.task}\n              date={task.date}\n              onClick={() => dispatch(removeTask(task.id))}\n              onToggle={() => dispatch(toggleCheck(task))}\n              key={task.id}\n              isDone={task.isDone}\n            />\n          ))\n        ) : (\n          <tr className=\"text-muted\">\n            <td>No tasks added</td>\n            <td>No tasks added</td>\n            <td>No tasks added</td>\n            <td>No tasks added</td>\n          </tr>\n        )}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default Tasks;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport AddTask from \"../task/AddTask\";\nimport Tasks from \"../task/Tasks\";\n\nfunction Dashboard() {\n  const { uid } = useSelector((state) => state.firebase.auth);\n  if (uid) {\n    return (\n      <>\n        <AddTask />\n        <Tasks />\n      </>\n    );\n  }\n  return <Redirect to=\"/signin\" />;\n}\n\nexport default Dashboard;\n","import { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signOut } from \"../../Redux/actions/authActions\";\n\nfunction NavItems() {\n  const dispatch = useDispatch();\n  const { uid, email } = useSelector((state) => state.firebase.auth);\n  if (uid) {\n    return (\n      <>\n        <Link\n          to=\"/signin\"\n          className=\"nav-link\"\n          onClick={() => {\n            dispatch(signOut());\n          }}\n        >\n          Logout\n        </Link>\n\n        <p className=\"mt-3\">{email}</p>\n      </>\n    );\n  }\n  return (\n    <>\n      <Link to=\"/signin\" className=\"nav-link\">\n        Signin\n      </Link>\n      <Link to=\"/signup\" className=\"nav-link\">\n        Signup\n      </Link>\n    </>\n  );\n}\n\nexport default NavItems;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavItems from \"./NavItems\";\nimport { Navbar as BootstrapNavbar } from \"react-bootstrap\";\nfunction Navbar() {\n  return (\n    <BootstrapNavbar\n      className=\"d-flex bg-light justify-content-center\"\n      bg=\"light\"\n      variant=\"light\"\n    >\n      <Link to=\"/\" className=\"navbar-brand\">\n        <h3>Todoss App</h3>\n      </Link>\n      <NavItems />\n    </BootstrapNavbar>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Signin from \"./Components/auth/Signin\";\nimport Signup from \"./Components/auth/Signup\";\nimport Dashboard from \"./Components/dashboard/Dashboard\";\nimport Navbar from \"./Components/layout/Navbar\";\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/signup\" component={Signup} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import { toast } from \"react-toastify\";\nconst initialState = {};\nconst taskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_TASK\":\n      toast.success(\"😄 Task Added\");\n      return state;\n\n    case \"ADD_TASK_ERROR\":\n      toast.error(\"An error occured\");\n      return state;\n\n    case \"REMOVE_TASK\":\n      toast.warn(\"😋 Task Deleted Successfully\");\n      return state;\n\n    case \"REMOVE_TASK_ERROR\":\n      toast.error(\"An error occured\");\n      return state;\n\n    case \"TOGGLE_CHECKED\":\n      toast.info(\"😇 Status Changed\");\n      return state;\n\n    case \"TOGGLE_CHECKED_ERROR\":\n      toast.error(\"An error occured\");\n      return state;\n\n    default:\n      return state;\n  }\n};\nexport default taskReducer;\n","import { toast } from \"react-toastify\";\nconst authReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"SIGN_IN\":\n      toast.success(\"Welcome back....\");\n      return state;\n    case \"SIGN_IN_ERROR\":\n      toast.error(\"An error occured\");\n      return state;\n    case \"SIGN_OUT\":\n      toast.warn(\"You signed Out\");\n      return state;\n    case \"SIGN_UP\":\n      toast.success(\"Welcome\");\n      return state;\n    case \"SIGN_UP_ERROR\":\n      toast.error(\"Error Signup\");\n      return state;\n    default:\n      return state;\n  }\n};\nexport default authReducer;\n","import { combineReducers } from \"redux\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport taskReducer from \"./taskReducer\";\nimport authReducer from \"./authReducer\";\n\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n  task: taskReducer,\n  auth: authReducer,\n});\nexport default rootReducer;\n","import rootReducer from \"../reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { getFirebase } from \"react-redux-firebase\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk.withExtraArgument({ getFirebase })))\n);\nexport default store;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBJD9La1oIGjI7dGF0EauVXVHMagPAw83A\",\n  authDomain: \"todo-fefcf.firebaseapp.com\",\n  databaseURL: \"https://todo-fefcf.firebaseio.com\",\n  projectId: \"todo-fefcf\",\n  storageBucket: \"todo-fefcf.appspot.com\",\n  messagingSenderId: \"318353273091\",\n  appId: \"1:318353273091:web:dbcb1ec185ba1118733936\",\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\nfirebase.auth();\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from \"./Redux/store\";\nimport { Provider, useSelector } from \"react-redux\";\nimport { ReactReduxFirebaseProvider, isLoaded } from \"react-redux-firebase\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport firebase from \"./Config/firebaseConfig\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport BarLoader from \"react-spinners/BarLoader\";\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n};\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nconst AuthIsLoaded = ({ children }) => {\n  const { auth } = useSelector((state) => state.firebase);\n  if (!isLoaded(auth)) {\n    return (\n      <div>\n        <BarLoader\n          loading={isLoaded}\n          color={\"#f56a79\"}\n          width={\"100%\"}\n          height={5}\n        />\n      </div>\n    );\n  }\n  return children;\n};\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <BrowserRouter>\n          <ToastContainer\n            hideProgressBar={true}\n            autoClose={2000}\n            newestOnTop={true}\n            limit={1}\n          />\n          <AuthIsLoaded>\n            <App />\n          </AuthIsLoaded>\n        </BrowserRouter>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}